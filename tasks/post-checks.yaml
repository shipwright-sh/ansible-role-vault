---

- name: Check the state of the new vault package
  stat:
    path: "{{ vault_install_dir }}/vault"
  register: vault_check_installed

- name: Fail play if vault is not installed as expected
  assert:
    that:
      - vault_check_installed.stat.exists
    fail_msg: vault was not installed as expected, it is likely something went wrong.
    success_msg: vault has been installed as expected.

- name: Check the vault binary version matches the expected version
  shell: |
    set -o pipefail
    {{ vault_install_dir }}/vault version | awk '{ print $NF }' | sed 's/^v//'
  args:
    executable: "{{ vault_check_bash_path.stdout_lines[0] }}"
  changed_when: false
  failed_when: false
  register: vault_check_installed_version

- name: Fail play if vault is not the expected version
  assert:
    that:
      - vault_check_installed_version.stdout_lines[0] == vault_version
    fail_msg: Installed vault version is not as expected, it is likely something went wrong.
    success_msg: Installed vault version is as expected.